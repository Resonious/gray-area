// Generated by LiveScript 1.2.0
(function(){
  var ref$, signum, abs, Four;
  ref$ = require('prelude-ls'), signum = ref$.signum, abs = ref$.abs;
  this.Level.Four = Four = (function(superclass){
    var prototype = extend$((import$(Four, superclass).displayName = 'Four', Four), superclass).prototype, constructor = Four;
    prototype.levelWidth = 1500;
    prototype.levelHeight = 1200;
    prototype.init = function(level){
      var x$, y$, z$;
      x$ = level;
      x$.background('black');
      y$ = x$.platform;
      y$.white(515, 739, 187, 131, this.canMove);
      y$.white(0, 1080, 1500, 33);
      y$.white(110, 787, 36, 294);
      y$.white(265, 895, 330, 31);
      y$.white(1418, 588, 82, 493);
      y$.white(7, 640, 139, 271);
      y$.white(39, 515, 433, 158);
      y$.white(1144, 899, 189, 31);
      y$.white(468, 595, 814, 69);
      y$.white(1237, 662, 45, 77);
      x$.text(375, 779, ">\nSlowly...");
      x$.danger(1426, 615, 74, 305);
      z$ = x$.player;
      z$.black(602, 787);
      z$.white(367, 984);
      x$.gray(494, 520, 170, 170, Level.One);
      return x$;
    };
    prototype.canMove = function(platform){
      platform.inside.body.immovable = false;
      return platform.customUpdate = null;
    };
    function Four(){
      Four.superclass.apply(this, arguments);
    }
    return Four;
  }(Level));
  function extend$(sub, sup){
    function fun(){} fun.prototype = (sub.superclass = sup).prototype;
    (sub.prototype = new fun).constructor = sub;
    if (typeof sup.extended == 'function') sup.extended(sub);
    return sub;
  }
  function import$(obj, src){
    var own = {}.hasOwnProperty;
    for (var key in src) if (own.call(src, key)) obj[key] = src[key];
    return obj;
  }
}).call(this);
