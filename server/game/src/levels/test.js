// Generated by LiveScript 1.2.0
(function(){
  var Test;
  this.Level.Test = Test = (function(superclass){
    var prototype = extend$((import$(Test, superclass).displayName = 'Test', Test), superclass).prototype, constructor = Test;
    prototype.init = function(level){
      var x$, y$, z$;
      x$ = level;
      y$ = x$.platform;
      y$.black(0, 200, 800, 300);
      z$ = x$.player;
      z$.black(200, 100);
      z$.white(220, 220);
      x$.gray(0, 0, 50, 50, Level.Test);
      return x$;
    };
    function Test(){
      Test.superclass.apply(this, arguments);
    }
    return Test;
  }(Level));
  function extend$(sub, sup){
    function fun(){} fun.prototype = (sub.superclass = sup).prototype;
    (sub.prototype = new fun).constructor = sub;
    if (typeof sup.extended == 'function') sup.extended(sub);
    return sub;
  }
  function import$(obj, src){
    var own = {}.hasOwnProperty;
    for (var key in src) if (own.call(src, key)) obj[key] = src[key];
    return obj;
  }
}).call(this);
